package tour.howard;

import tour.howard.ShowMapActivity.GeoUpdateHandler;
import android.content.Context;
import android.content.Intent;
import android.content.res.TypedArray;
import android.graphics.drawable.Drawable;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.view.View;
import android.view.WindowManager;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.view.ViewGroup;
import android.widget.AdapterViewFlipper;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.Toast;
import android.widget.ViewFlipper;
import android.widget.BaseAdapter;
import android.widget.Gallery;
import android.widget.ImageView;

import com.google.android.maps.GeoPoint;
import com.google.android.maps.MapActivity;
import com.google.android.maps.MapController;
import com.google.android.maps.MapView;
import com.google.android.maps.OverlayItem;

public class GuideActivity extends MapActivity {
	
	private Integer[] pics = {R.drawable.std1,R.drawable.std2,R.drawable.std3};
	private ViewFlipper info;
	private Button next,previous;
	private MapView map;
	private ImageView image;
	private WindowManager wm;
	private MapController mapController;
	private MyOverlays itemizedoverlay;
	private LocationManager locationManager;
	
	@SuppressWarnings("deprecation")
	public void onCreate(Bundle bundle){
		super.onCreate(bundle);
		setContentView(R.layout.guide);
		
		Gallery show = (Gallery)findViewById(R.id.gallery);
		show.setAdapter(new ImageAdapter(this));
		
		next = (Button) findViewById(R.id.Button01);
		previous = (Button) findViewById(R.id.Button02);
		next.setOnClickListener(showImage);
		previous.setOnClickListener(showMap);
		info = (ViewFlipper)findViewById(R.id.flipper);

		wm = (WindowManager)getSystemService(Context.WINDOW_SERVICE);
        int height = wm.getDefaultDisplay().getHeight();
        
		map = (MapView)findViewById(R.id.map);
		map.setLayoutParams(new LinearLayout.LayoutParams(LayoutParams.FILL_PARENT,height - 300));
		mapController = map.getController();
		image = (ImageView)findViewById(R.id.Image);
		
		locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
		locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, new GeoUpdateHandler());
		Drawable drawable = this.getResources().getDrawable(R.drawable.point);
		itemizedoverlay = new MyOverlays(drawable,this);
		
		drawPath();
		
	}
	private OnClickListener showImage = new OnClickListener() {

		public void onClick(View v) {
			info.setDisplayedChild(1);
		}
	};
	private OnClickListener showMap = new OnClickListener() {

		public void onClick(View v) {
			info.setDisplayedChild(0);
		}
	};
	@Override
	protected boolean isRouteDisplayed() {
		// TODO Auto-generated method stub
		return false;
	}
   public class ImageAdapter extends BaseAdapter {

    	private Context ctx;
    	int imageBackground;
    	
    	public ImageAdapter(Context c) {
			ctx = c;
			TypedArray ta = obtainStyledAttributes(R.styleable.Gallery1);
			imageBackground = ta.getResourceId(R.styleable.Gallery1_android_galleryItemBackground, 1);
			ta.recycle();
		}
    	public int getCount() {
    		
    		return pics.length;
    	}
    	public Object getItem(int arg0) {
    		
    		return arg0;
    	}
    	public long getItemId(int arg0) {
    		
    		return arg0;
    	}
    	public View getView(int arg0, View arg1, ViewGroup arg2) {
    		ImageView iv = new ImageView(ctx);
    		iv.setImageResource(pics[arg0]);
    		iv.setScaleType(ImageView.ScaleType.FIT_XY);
    		iv.setLayoutParams(new Gallery.LayoutParams(150,120));
    		iv.setBackgroundResource(imageBackground);
    		return iv;
    	}
    }
   private void drawPath(){
	   int[] values = getResources().getIntArray(R.array.Standard);
	   int i = 2;
	   while(i< values.length){
	   map.getOverlays().add(new RouteOverlay(new GeoPoint(values[i-2],values[i-1]), new GeoPoint(values[i],values[i+1]), 255));
	   i+=2;
	   }
   }
	private void createMarker() {
		GeoPoint p = map.getMapCenter();
		OverlayItem overlayitem = new OverlayItem(p, "", "");
		itemizedoverlay.clear();
		itemizedoverlay.addOverlay(overlayitem);
		map.getOverlays().add(itemizedoverlay);
		map.invalidate();
	}
	public class GeoUpdateHandler implements LocationListener {
	
		public void onLocationChanged(Location location) {
			int lat = (int) (location.getLatitude() * 1E6);
			int lng = (int) (location.getLongitude() * 1E6);
			GeoPoint point = new GeoPoint(lat, lng);
			mapController.animateTo(point);
			createMarker();
			map.invalidate();
	
		}
	
		public void onProviderDisabled(String provider) {
			
		}
	
		public void onProviderEnabled(String provider) {
		}
	
		public void onStatusChanged(String provider, int status, Bundle extras) {
		}
	}
}
 