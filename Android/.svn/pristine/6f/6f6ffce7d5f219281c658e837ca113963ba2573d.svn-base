package tour.howard;

import java.util.ArrayList;

import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Canvas;
import android.graphics.drawable.Drawable;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.MotionEvent;
import android.view.View;
import android.view.WindowManager;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.Spinner;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemSelectedListener;

import com.google.android.maps.GeoPoint;
import com.google.android.maps.MapActivity;
import com.google.android.maps.MapController;
import com.google.android.maps.MapView;
import com.google.android.maps.OverlayItem;



public class HUMap extends MapActivity implements OnClickListener, OnItemSelectedListener{
	//private WindowManager wm;
	private MapView mapView;
	private MapController mapController;
	private Button standard,showme,highlight;
	private Spinner section;
	private AlertDialog alert;
	private MyOverlays landmarks/*, URH*/;
	
	@SuppressWarnings("deprecation")
	public void onCreate(Bundle bundle) {
		super.onCreate(bundle);
		setContentView(R.layout.map); // bind the layout to the activity
		
		//set the map 
		mapView = (MapView)findViewById(R.id.map);
		mapView.setBuiltInZoomControls(true);
		mapView.setSatellite(false);
		mapView.setTraffic(false);
		mapView.setStreetView(true);
		mapController = mapView.getController();
		mapController.setZoom(18);
		
		section = (Spinner)findViewById(R.id.sect);
		String[] values = getResources().getStringArray(R.array.Sections);
		ArrayAdapter<String> views = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item,values);
		section.setAdapter(views);
		section.setOnItemSelectedListener(this);
		
		CenterMap();
		
		standard = (Button) findViewById(R.id.tour);
		standard.setOnClickListener(this);
		
		showme = (Button)findViewById(R.id.show);
		showme.setOnClickListener(this);
		
		highlight = (Button)findViewById(R.id.high);
		highlight.setOnClickListener(this);
		
		Drawable landmark = this.getResources().getDrawable(R.drawable.bison);
		landmarks = new MyOverlays(landmark,this);
		
				
	}

	@Override
	protected boolean isRouteDisplayed() {
		return false;
	}
	private void CenterMap(){
		mapController = mapView.getController();
		mapController.setZoom(18);
		GeoPoint p;
		switch(section.getSelectedItemPosition()){
		case 0:p = new GeoPoint((int)(38.924932*1E6),(int)(-77.019372*1E6));
			break;
		case 1:p = new GeoPoint((int)(38.918944*1E6),(int)(-77.019919*1E6));
			break;
		case 2:p = new GeoPoint((int)(38.922592*1E6),(int)(-77.020208*1E6));
			break;
		case 3:p = new GeoPoint((int)(38.921148*1E6),(int)(-77.017730*1E6));
			break;
		case 4:p = new GeoPoint((int)(38.919094*1E6),(int)(-77.024307*1E6));
			break;
		case 5:p = new GeoPoint((int)(38.943840*1E6),(int)(-77.057995*1E6));
			break;
		case 6:p = new GeoPoint((int)(38.939843*1E6),(int)(-76.983184*1E6));
			break;
		default: p = new GeoPoint(0,0);
		}
		mapController.animateTo(p);
	}
	protected void onResume(){
		super.onResume();
	}

	public void onClick(View v) {
		// TODO Auto-generated method stub
		if(v == standard){
			startActivity(new Intent(this,GuideActivity.class ));
		}
		else if(v == showme){
			mapView.getOverlays().clear();
			final CharSequence[] items = getResources().getStringArray(R.array.Show);
			AlertDialog.Builder builder = new AlertDialog.Builder(this);
			builder.setTitle("Pick a group of buildings");
			builder.setSingleChoiceItems(items,-1,new DialogInterface.OnClickListener() {
			    public void onClick(DialogInterface dialog, int item) {
			    	landmarks.clear();
					int[] data  = {};
					switch(item){
					case 0: break;
					case 1:	data = getResources().getIntArray(R.array.Parking); break;
					case 2: data = getResources().getIntArray(R.array.Athletic);break;
					case 3: data = getResources().getIntArray(R.array.Libraries);break;
					case 4: data = getResources().getIntArray(R.array.Residence);break;	
					}
					if(item!=0){
						Toast.makeText(getApplicationContext(),
								"Showing the  " + items[item] + " of Howard" //+ data.length
								,Toast.LENGTH_SHORT).show();
						int i  =0;
						while( i < data.length){
							GeoPoint w = new GeoPoint(data[i],data[i+1]);
							landmarks.addOverlay(new OverlayItem(w,"",""));
							i+=2;
							
						}
						mapView.getOverlays().add(landmarks);
						mapView.invalidate();
					}
					else{
						Toast.makeText(getApplicationContext(),"Nothing selected",Toast.LENGTH_SHORT).show();
					}
			    }
			});
			builder.setPositiveButton("Accept", new DialogInterface.OnClickListener() {
		           public void onClick(DialogInterface dialog, int id) {
		                dialog.cancel();
		           }
		    });
			builder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
		           public void onClick(DialogInterface dialog, int id) {
		        	   	mapView.getOverlays().clear();
		        	   	mapView.invalidate();
		                dialog.cancel();
		           }
		    });
			alert = builder.create();
			alert.show();
		}
		else if(v== highlight){
			mapView.getOverlays().clear();
			final CharSequence[] items = getResources().getStringArray(R.array.Buildings);
			AlertDialog.Builder builder = new AlertDialog.Builder(this);
			builder.setTitle("Pick a building to highlight");
			builder.setSingleChoiceItems(items,-1,new DialogInterface.OnClickListener() {
			    public void onClick(DialogInterface dialog, int item) {
					int[] data  = {};
					switch(item){
					case 0: data = getResources().getIntArray(R.array.Engineering_Building); break;
					case 1:	data = getResources().getIntArray(R.array.Mackey_Building); break;
					case 2: data = getResources().getIntArray(R.array.Douglass_Hall);break;
					case 3: data = getResources().getIntArray(R.array.School_of_Business);break;
					case 4: data = getResources().getIntArray(R.array.Carnegie_Hall);break;	
					case 5: data = getResources().getIntArray(R.array.Drew_Hall); break;
					case 6:	data = getResources().getIntArray(R.array.Cook_Hall); break;
					case 7: data = getResources().getIntArray(R.array.East_Towers_Plaza);break;
					case 8: data = getResources().getIntArray(R.array.West_Towers_Plaza);break;
					case 9: data = getResources().getIntArray(R.array.Health_Science_Library);break;
					case 10: data = getResources().getIntArray(R.array.Graduate_Library);break;
					case 11: data = getResources().getIntArray(R.array.Undergraduate_Library);break;
					case 12: data = getResources().getIntArray(R.array.Thirkield_Hall);break;
					case 13: data = getResources().getIntArray(R.array.Chemical_Engineering_Building);break;
					case 14: data = getResources().getIntArray(R.array.Bunche_Center);break;
					case 15: data = getResources().getIntArray(R.array.Power_Plant);break;
					case 16: data = getResources().getIntArray(R.array.Rankin_Chapel);break;
					case 17: data = getResources().getIntArray(R.array.Blackburn_Center);break;
					case 18: data = getResources().getIntArray(R.array.Burr_Gymnasium);break;
					case 19: data = getResources().getIntArray(R.array.Lindsay_Hall);break;
					case 20: data = getResources().getIntArray(R.array.Mordecai_Admin_Building);break;
					case 21: data = getResources().getIntArray(R.array.Howard_Hall);break;
					case 22: data = getResources().getIntArray(R.array.Howard_Manor);break;
					case 23: data = getResources().getIntArray(R.array.Effingham_Apartments);break;
					}
					Toast.makeText(getApplicationContext(),
							"Highlighting the  " + items[item] + " of Howard" //+ data.length
							,Toast.LENGTH_SHORT).show();
					int i =2;
					while(i < data.length){
						   mapView.getOverlays().add(new RouteOverlay(new GeoPoint(data[i-2],data[i-1]), new GeoPoint(data[i],data[i+1]), -65536));
						   i+=2;
					}
					mapView.invalidate();
					dialog.cancel();
			    }
			});
			alert = builder.create();
			alert.show();
		}
		else if(v == section){
			
		}
		else{
			
		}
	}

	public void onItemSelected(AdapterView<?> arg0, View arg1, int arg2,long arg3) {
		Toast.makeText(arg0.getContext(),
				"Changing the View to the  " + arg0.getItemAtPosition(arg2).toString(),
				Toast.LENGTH_SHORT).show();
		CenterMap();
		
	}

	public void onNothingSelected(AdapterView<?> arg0) {
		// TODO Auto-generated method stub
		
	}

}

