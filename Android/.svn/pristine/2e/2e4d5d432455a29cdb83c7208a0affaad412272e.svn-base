package tour.howard;

import android.content.Context;
import android.content.Intent;
import android.graphics.Canvas;
import android.graphics.drawable.Drawable;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.maps.GeoPoint;
import com.google.android.maps.MapActivity;
import com.google.android.maps.MapController;
import com.google.android.maps.MapView;
import com.google.android.maps.OverlayItem;

public class POIActivity extends MapActivity {

	private MapController mapController;
	private MapView mapView;
	private LocationManager locationManager;
	private MyOverlays itemizedoverlay,landmarks;
	private SquareOverlay accent;
	private int maxLong= (int)(-77.0208 * 1E6);
	private int minLong= (int)(-77.0207 * 1E6);
	private int maxLat= (int)(38.9195 * 1E6);
	private int minLat= (int)(38.9205 * 1E6);
	private GeoPoint sections [] = {new GeoPoint((int)(38.917256*1E6),(int)(-77.020589*1E6)),new GeoPoint((int)(38.920566*1E6),(int)(-77.023602*1E6))};
	enum sector {nor,sou,div,law};

	@SuppressWarnings("deprecation")
	public void onCreate(Bundle bundle) {
		super.onCreate(bundle);
		setContentView(R.layout.poi); // bind the layout to the activity
		
		Button standard = (Button) findViewById(R.id.sta);
		standard.setOnClickListener(showDefault);

		mapView = (MapView) findViewById(R.id.map);
		mapView.setBuiltInZoomControls(false);
		// Either satellite or 2d 
		mapView.setSatellite(false);
		mapView.setTraffic(false);
		mapView.setStreetView(true);
		mapView.setFocusable(false);
		mapView.setClickable(false);
		Drawable drawable = this.getResources().getDrawable(R.drawable.point);
		Drawable landmark = this.getResources().getDrawable(R.drawable.jump);
		itemizedoverlay = new MyOverlays(drawable,this);
		landmarks = new MyOverlays(landmark,this);
		CenterMap();
		try {
			Thread.sleep(200);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ListView places = (ListView)findViewById(R.id.list);
		String [] values = getResources().getStringArray(R.array.SouthPlaces);
		ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1,android.R.id.text1,values);
		places.setAdapter(adapter);
		places.setOnItemClickListener(highlight);
	}

	@Override
	protected boolean isRouteDisplayed() {
		return false;
	}

	private void createMarker() {
		GeoPoint p = mapView.getMapCenter();
		OverlayItem overlayitem = new OverlayItem(p, "", "");
		itemizedoverlay.addOverlay(overlayitem);
		mapView.getOverlays().add(itemizedoverlay);
	}
	private void createLandmarks(){
		for(int i = 0; i < sections.length; i ++){
			GeoPoint w = sections[i];
			landmarks.addOverlay(new OverlayItem(w,"",""));
			mapView.getOverlays().add(landmarks);
			//mapView.getOverlays().add(new SquareOverlay(new GeoPoint(38918056,-77019795),new GeoPoint(389179223,-77020943)));
		}
		
	}
	private void CenterMap(){
		Runnable center = new Runnable(){
			public void run(){
				mapController = mapView.getController();
				mapController.setZoom(18);
				GeoPoint  p = new GeoPoint((int)(38.918724*1E6),(int)(-77.021600*1E6));
				mapController.animateTo(p);
				//createMarker();
				createLandmarks();
			}
		};
		new Thread(center).start();
	}
	private class Center implements OnTouchListener{

		public boolean onTouch(View arg0, MotionEvent arg1) {
			if(arg1.getAction() == arg1.ACTION_DOWN){
				CenterMap();
				try {
					Thread.sleep(500);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			return false;
		}
		
	}
	private OnItemClickListener highlight = new OnItemClickListener(){

		public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
			GeoPoint shape [] = {new GeoPoint(38918056,-77019795), new GeoPoint(38917923,-77020943), new GeoPoint(38916868,-77020836),new GeoPoint(38916995,-77019774)};
			mapView.getOverlays().add(new SquareOverlay(shape));
			mapView.invalidate();
		}
		
	};
	private OnClickListener showDefault = new OnClickListener() {

		public void onClick(View v) {
			startActivity(new Intent(POIActivity.this,ShowStandard.class ));
		}
	};
}
